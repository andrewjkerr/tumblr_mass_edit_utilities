# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/tumblr_client/all/tumblr_client.rbi
#
# tumblr_client-0.8.5

module Tumblr
  def self.new(options = nil); end
  extend Tumblr::Config
end
module Tumblr::Blog
  def avatar(blog_name, size = nil); end
  def blog_info(blog_name); end
  def blog_likes(blog_name, options = nil); end
  def draft(blog_name, options = nil); end
  def followers(blog_name, options = nil); end
  def posts(blog_name, options = nil); end
  def queue(blog_name, options = nil); end
  def submissions(blog_name, options = nil); end
end
module Tumblr::User
  def dashboard(options = nil); end
  def follow(url); end
  def following(options = nil); end
  def info; end
  def like(id, reblog_key); end
  def likes(options = nil); end
  def unfollow(url); end
  def unlike(id, reblog_key); end
end
module Tumblr::Request
  def get(path, params = nil); end
  def get_redirect_url(path, params = nil); end
  def get_response(path, params = nil); end
  def post(path, params = nil); end
  def respond(response); end
end
module Tumblr::Connection
  def connection(options = nil); end
end
module Tumblr::Post
  def audio(blog_name, options = nil); end
  def chat(blog_name, options = nil); end
  def convert_source_array(key, options); end
  def create_post(type, blog_name, options = nil); end
  def delete(blog_name, id); end
  def edit(blog_name, options = nil); end
  def extract_data!(options); end
  def extract_mimetype(filepath); end
  def link(blog_name, options = nil); end
  def photo(blog_name, options = nil); end
  def post_path(blog_name); end
  def quote(blog_name, options = nil); end
  def reblog(blog_name, options = nil); end
  def text(blog_name, options = nil); end
  def video(blog_name, options = nil); end
end
module Tumblr::Tagged
  def tagged(tag, options = nil); end
end
module Tumblr::Helper
  def blog_path(blog_name, ext); end
  def full_blog_name(blog_name); end
  def validate_no_collision(options, attributes); end
  def validate_options(valid_opts, opts); end
end
class Tumblr::Client
  def api_host; end
  def api_scheme; end
  def credentials; end
  def initialize(attrs = nil); end
  def self.default_api_host; end
  include Tumblr::Blog
  include Tumblr::Connection
  include Tumblr::Helper
  include Tumblr::Post
  include Tumblr::Request
  include Tumblr::Tagged
  include Tumblr::User
end
module Tumblr::Config
  def api_scheme; end
  def api_scheme=(arg0); end
  def client; end
  def client=(arg0); end
  def configure; end
  def consumer_key; end
  def consumer_key=(arg0); end
  def consumer_secret; end
  def consumer_secret=(arg0); end
  def credentials; end
  def oauth_token; end
  def oauth_token=(arg0); end
  def oauth_token_secret; end
  def oauth_token_secret=(arg0); end
  def options; end
end
